setup: |
  echo "Make sure you create your own virtual environment!"
  echo "Reference: https://realpython.com/python-virtual-environments-a-primer/"
  python -m pip install faker
  echo "Done installing project dependencies!"
---

# Reminder for ^^^:
# All commands executed in the setup block are done in a
# one-by-one fashion from the current working directory. This means
# that there is no history associated with running the commands and
# thus multiple commands must be run in a single chain if side effects are
# important to ensuring the proper setup of the project

# Add your own gatorgrade checks for your long-term systems project
# Your program should contain a total of at least 25 checks in this file
# You should keep all of the existing checks inside of this file


# perform checks on a file
- project/pyremove.py:
    - description: Ensure that the pyremove.py file exists in project
      check: ConfirmFileExists
    - description: Complete all TODOs, remove the TODO markers, and rewrite comments for pyremove.py
      check: MatchFileFragment
      options:
        fragment: TODO
        count: 0
        exact: true
    - description: Create a sufficient number of single-line comments in pyremove.py
      check: CountSingleLineComments
      options:
        language: "Python"
        count: 10
        exact: false
    - description: Use the create_dir() function in the main function
      check: MatchFileFragment
      options:
        fragment: create_dir(
        count: 2
        exact: false
    - description: Use the create_file() function in the main function
      check: MatchFileFragment
      options:
        fragment: create_file(
        count: 2
        exact: false
    - description: Use an import statement for Faker constructor from the faker package
      check: MatchFileFragment
      options:
        fragment: from faker import Faker
        count: 1
        exact: true
    - description: Create a sufficient number of docstring (i.e., multiple-line) comments in processor.py
      check: CountMultipleLineComments
      options:
        language: "Python"
        count: 2
        exact: false

# run a command 
- description: Run the project/pyremove.py program and ensure that it yields one line of output
  check: CountCommandOutput
  options:
    command: python project/pyremove.py
    count: 1
    exact: false

# perform checks on a file
- writing/proposal.md:
    - description: Ensure that the proposal.md file exists in the writing/ directory
      check: ConfirmFileExists
    - description: Complete all TODOs, remove the TODO markers, and rewrite comments for the proposal
      check: MatchFileFragment
      options:
        fragment: TODO
        count: 0
        exact: true
    - description: Delete the 'Add Your Name Here' prompt in the proposal.md file
      check: MatchFileFragment
      options:
        fragment: "Add Your Name Here"
        count: 0
        exact: true
    - description: Write a minimum of 500 meaningful words in the proposal.md file in the writing/ directory
      check: CountFileWords
      options:
        count: 300
        exact: false

# perform checks on a file
- writing/update.md:
    - description: Ensure that the update.md file exists in the writing/ directory
      check: ConfirmFileExists
    - description: Complete all TODOs, remove the TODO markers, and rewrite comments for the update
      check: MatchFileFragment
      options:
        fragment: TODO
        count: 0
        exact: true
    - description: Delete the 'Add Your Name Here' prompt in the update.md file
      check: MatchFileFragment
      options:
        fragment: "Add Your Name Here"
        count: 0
        exact: true
    - description: Write a minimum of 200 meaningful words in the update.md file in the writing/ directory
      check: CountFileWords
      options:
        count: 200
        exact: false

# perform checks on a file
- writing/report.md:
    - description: Ensure that the report.md file exists in the writing/ directory
      check: ConfirmFileExists
    - description: Complete all TODOs, remove the TODO markers, and rewrite comments for the report
      check: MatchFileFragment
      options:
        fragment: TODO
        count: 0
        exact: true
    - description: Delete the 'Add Your Name Here' prompt in the report.md file
      check: MatchFileFragment
      options:
        fragment: "Add Your Name Here"
        count: 0
        exact: true
    - description: Write a minimum of 500 meaningful words in the report.md file in the writing/ directory
      check: CountFileWords
      options:
        count: 500
        exact: false
    - description: Have a minimum of 3 code blocks in the report.md file
      check: CountMarkdownTags
      options:
        tag: code_block
        count: 3
        exact: false

# perform checks on a file
- writing/demonstration.md:
    - description: Ensure that the demonstration.md file exists in the writing/ directory
      check: ConfirmFileExists
    - description: Complete all TODOs, remove the TODO markers, and rewrite comments for the demonstration
      check: MatchFileFragment
      options:
        fragment: TODO
        count: 0
        exact: true
    - description: Delete the 'Add Your Name Here' prompt in the demonstration.md file
      check: MatchFileFragment
      options:
        fragment: "Add Your Name Here"
        count: 0
        exact: true
    - description: Write a minimum of 100 meaningful words in the demonstration.md file in the writing/ directory
      check: CountFileWords
      options:
        count: 100
        exact: false

# count number of commits in the GitHub repository
- description: Have at least a specific minimum number of 20 commits in repository
  check: CountCommits
  options:
    count: 20
